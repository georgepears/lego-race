#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Oct 25, 2017 08:15:25 AM

import sys

from Tkinter import *
import time
import os
window = Tk()

import ttk

from threading import Thread


def reset():
    global LANE1
    global LANE2

    # Set 'lane ended' booleans
    global END1
    global END2

    # Set 'allowed to start' boolean
    global ALLOWED

    # Set lane time counters
    global COUNT1
    global COUNT2
    
    # Set 'lane timing' booleans
    LANE1 = False
    LANE2 = False

    # Set 'lane ended' booleans
    END1 = False
    END2 = False

    # Set 'allowed to start' boolean
    ALLOWED = False

    # Set lane time counters
    COUNT1 = 0
    COUNT2 = 0

reset()
    
def startRace():
    if ALLOWED == False:
        lblMain.configure(text='''New Race Started - Go on GREEN!''')
        # Reset variables to make sure race start is ready 
        reset()
        
        # Print message - new race started
        print "\n"*100
        print "New Race Started - Go on GREEN!"
        
        # Now enable the race start triggers, allowing car to be detected through the start line
        global ALLOWED
        ALLOWED = True
        lblTimer1txt.set("0.0")
        lblTimer2txt.set("0.0")
        lblWon1.configure(text='''''')
        lblWon2.configure(text='''''')
        

def lane1Start():
    if ALLOWED == True:
        global LANE1
        LANE1 = True
        print "Lane 1 started",LANE1
        

def lane1Ended():
    if LANE1 == True:
        global LANE1
        global END1
        global ALLOWED
        LANE1 = False
        END1 = True
        print "Lane 1 ended"
        ALLOWED = False
        

def lane2Start():
    if ALLOWED == True:
        global LANE2
        LANE2 = True
        print "Lane 2 started"

def lane2Ended():
    if LANE2 == True:
        global LANE2
        global END2
        global ALLOWED
        LANE2 = False
        END2 = True
        print "Lane 2 ended"
        ALLOWED = False



_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = '#d9d9d9' # X11 color: 'gray85'
_ana1color = '#d9d9d9' # X11 color: 'gray85' 
_ana2color = '#d9d9d9' # X11 color: 'gray85' 
font10 = "-family {Segoe UI} -size 18 -weight bold -slant "  \
    "roman -underline 0 -overstrike 0"
font11 = "-family {Segoe UI} -size 15 -weight bold -slant "  \
    "roman -underline 0 -overstrike 0"
font9 = "-family {Segoe UI} -size 14 -weight bold -slant roman"  \
    " -underline 0 -overstrike 0"

window.geometry("600x397+444+97")
window.title("Lego Racing - Made by Eccleston Scout Group")
window.configure(background="#d9d9d9")
window.configure(highlightbackground="#f0f0f0f0f0f0")
window.wm_iconbitmap('logo.ico')


frmLane1 = LabelFrame(window)
frmLane1.place(relx=0.03, rely=0.28, relheight=0.26, relwidth=0.45)
frmLane1.configure(relief=GROOVE)
frmLane1.configure(foreground="black")
frmLane1.configure(text='''Lane 1''')
frmLane1.configure(background="#d9d9d9")
frmLane1.configure(width=270)

lblTimer1 = Label(frmLane1)
lblTimer1.place(relx=0.35, rely=0.2, height=38, width=82)
lblTimer1.configure(background="#d9d9d9")
lblTimer1.configure(disabledforeground="#a3a3a3")
lblTimer1.configure(font=font10)
lblTimer1.configure(foreground="#000000")
lblTimer1txt = StringVar()
lblTimer1.configure(textvariable=lblTimer1txt)
lblTimer1txt.set("0.0")

lblWon1 = Label(frmLane1)
lblWon1.place(relx=0.28, rely=0.55, height=34, width=120)
lblWon1.configure(background="#d9d9d9")
lblWon1.configure(disabledforeground="#a3a3a3")
lblWon1.configure(font=font11)
lblWon1.configure(foreground="#000000")
lblWon1.configure(text='''''')

frmwindow = Frame(window)
frmwindow.place(relx=0.03, rely=0.05, relheight=0.19, relwidth=0.93)
frmwindow.configure(relief=GROOVE)
frmwindow.configure(borderwidth="2")
frmwindow.configure(relief=GROOVE)
frmwindow.configure(background="#d9d9d9")
frmwindow.configure(width=565)

lblMain = Label(frmwindow)
lblMain.place(relx=0.1, rely=0.1, height=62, width=450)
lblMain.configure(background="#d9d9d9")
lblMain.configure(disabledforeground="#a3a3a3")
lblMain.configure(font=font9)
lblMain.configure(foreground="#000000")
lblMain.configure(text='''Press the button to start a new race...''')

frmLane2 = LabelFrame(window)
frmLane2.place(relx=0.52, rely=0.28, relheight=0.26, relwidth=0.45)
frmLane2.configure(relief=GROOVE)
frmLane2.configure(foreground="black")
frmLane2.configure(text='''Lane 2''')
frmLane2.configure(background="#d9d9d9")
frmLane2.configure(highlightbackground="#d9d9d9")
frmLane2.configure(highlightcolor="black")
frmLane2.configure(width=270)

lblTimer2 = Label(frmLane2)
lblTimer2.place(relx=0.35, rely=0.2, height=38, width=82)
lblTimer2.configure(background="#d9d9d9")
lblTimer2.configure(disabledforeground="#a3a3a3")
lblTimer2.configure(font=font10)
lblTimer2.configure(foreground="#000000")
lblTimer2txt = StringVar()
lblTimer2.configure(textvariable=lblTimer2txt)
lblTimer2txt.set("0.0")

lblWon2 = Label(frmLane2)
lblWon2.place(relx=0.28, rely=0.55, height=34, width=120)
lblWon2.configure(background="#d9d9d9")
lblWon2.configure(disabledforeground="#a3a3a3")
lblWon2.configure(font=font11)
lblWon2.configure(foreground="#000000")
lblWon2.configure(text='''''')

frmButtons = Frame(window)
frmButtons.place(relx=0.03, rely=0.6, relheight=0.19, relwidth=0.93)

frmButtons.configure(relief=GROOVE)
frmButtons.configure(borderwidth="2")
frmButtons.configure(relief=GROOVE)
frmButtons.configure(background="#d9d9d9")
frmButtons.configure(width=125)

btnStart1 = Button(frmButtons)
btnStart1.place(relx=0.02, rely=0.13, height=54, width=127)
btnStart1.configure(activebackground="#d9d9d9")
btnStart1.configure(activeforeground="#000000")
btnStart1.configure(background="#d9d9d9")
btnStart1.configure(disabledforeground="#a3a3a3")
btnStart1.configure(foreground="#000000")
btnStart1.configure(highlightbackground="#d9d9d9")
btnStart1.configure(highlightcolor="black")
btnStart1.configure(pady="0")
btnStart1.configure(text='''Lane 1 start''')
btnStart1.configure(width=77)
btnStart1.configure(command=lane1Start)

BtnEnd1 = Button(frmButtons)
BtnEnd1.place(relx=0.26, rely=0.13, height=54, width=127)
BtnEnd1.configure(activebackground="#d9d9d9")
BtnEnd1.configure(activeforeground="#000000")
BtnEnd1.configure(background="#d9d9d9")
BtnEnd1.configure(disabledforeground="#a3a3a3")
BtnEnd1.configure(foreground="#000000")
BtnEnd1.configure(highlightbackground="#d9d9d9")
BtnEnd1.configure(highlightcolor="black")
BtnEnd1.configure(pady="0")
BtnEnd1.configure(text='''Lane 1 end''')
BtnEnd1.configure(width=127)
BtnEnd1.configure(command=lane1Ended)

btnStart2 = Button(frmButtons)
btnStart2.place(relx=0.5, rely=0.13, height=54, width=127)
btnStart2.configure(activebackground="#d9d9d9")
btnStart2.configure(activeforeground="#000000")
btnStart2.configure(background="#d9d9d9")
btnStart2.configure(disabledforeground="#a3a3a3")
btnStart2.configure(foreground="#000000")
btnStart2.configure(highlightbackground="#d9d9d9")
btnStart2.configure(highlightcolor="black")
btnStart2.configure(pady="0")
btnStart2.configure(text='''Lane 2 start''')
btnStart2.configure(width=127)
btnStart2.configure(command=lane2Start)

btnEnd2 = Button(frmButtons)
btnEnd2.place(relx=0.75, rely=0.13, height=54, width=127)
btnEnd2.configure(activebackground="#d9d9d9")
btnEnd2.configure(activeforeground="#000000")
btnEnd2.configure(background="#d9d9d9")
btnEnd2.configure(disabledforeground="#a3a3a3")
btnEnd2.configure(foreground="#000000")
btnEnd2.configure(highlightbackground="#d9d9d9")
btnEnd2.configure(highlightcolor="black")
btnEnd2.configure(pady="0")
btnEnd2.configure(text='''Lane 2 end''')
btnEnd2.configure(width=137)
btnEnd2.configure(command=lane2Ended)

btnStart = Button(window)
btnStart.place(relx=0.05, rely=0.83, height=54, width=537)
btnStart.configure(activebackground="#d9d9d9")
btnStart.configure(activeforeground="#000000")
btnStart.configure(background="#d9d9d9")
btnStart.configure(disabledforeground="#a3a3a3")
btnStart.configure(foreground="#000000")
btnStart.configure(highlightbackground="#d9d9d9")
btnStart.configure(highlightcolor="black")
btnStart.configure(pady="0")
btnStart.configure(text='''Start''')
btnStart.configure(width=537)
btnStart.configure(command=startRace)


# Set constant timer
timer = 0;

# Startup message
print ("\n"*100)
print "Press the button to start a new race"


# Start timer loop
while True:

    # Go through loop every 0.02 seconds
    time.sleep(0.02) # Lower than 0.2 to make time more accurate
    timer = timer + 0.02

    ###### ADD GPIO DECTECTION HERE ######
        
    # Add to the lane 1 timer if a race has been started
    if LANE1 == True:
        COUNT1 = COUNT1 + 0.02
        lblTimer1txt.set("{0:.2f}".format(round(COUNT1, 2)))
        #window.update()

    # Add to the lane 2 timer if a race has been started
    if LANE2 == True:
        COUNT2 = COUNT2 + 0.02
        lblTimer2txt.set("{0:.2f}".format(round(COUNT2, 2)))
        #window.update()

    # If both lanes have finished, print scores and reset game
    if END1 == True and END2 == True:
        # Print each lane's time and if lane 1 is faster, print lane 1 won
        if COUNT1 > COUNT2:
            print "\n"*100
            print "LANE 1 = ",COUNT1
            print "LANE 2 = ",COUNT2
            print "LANE 2 WON!"
            lblWon2.configure(text='''WINNER!''')
            lblWon1.configure(text='''LOSER!''')
            print "\nPress the button to start a new race..."
            lblMain.configure(text='''Press the button to start a new race...''')
        # Print each lane's time and if lane 2 is faster, print lane 2 won
        elif COUNT2 > COUNT1:
            print "\n"*100
            print "LANE 1 = ",COUNT1
            print "LANE 2 = ",COUNT2
            print "LANE 1 WON!"
            lblWon1.configure(text='''WINNER!''')
            lblWon2.configure(text='''LOSER!''')
            print "\nPress the button to start a new race"
            lblMain.configure(text='''Press the button to start a new race...''')
        ## Print each lane's time and if both lanes have the same time, print same times
        elif COUNT1 == COUNT2:
            print "\n"*100
            print "LANE 1 = ",COUNT1
            print "LANE 2 = ",COUNT2
            print "SAME TIMES!"
            print "\nPress the button to start a new race..."
            lblWon1.configure(text='''SAME TIMES!''')
            lblWon2.configure(text='''SAME TIMES!''')
            lblMain.configure(text='''Press the button to start a new race...''')
        reset()

    # If lane 1 finishes before lane 2 has started, reset the game
    if END1 == True and LANE2 == False:
        print "\n"*100
        print "RACE ENDED: \n   Lane 1 finished before lane 2 started"
        print "\nPress the button to start a new race"
        lblMain.configure(text='''RACE ENDED: Lane 1 finished before lane 2 started\nPress the button to start a new race...''')
        reset()
    # If lane 2 finishes before lane 1 has started, reset the game
    if END2 == True and LANE1 == False:

        # Print message telling the user the race has stopped
        print "\n"*100
        print "RACE ENDED: \n   Lane 2 finished before lane 1 started"
        print "\nPress the button to start a new race"
        lblMain.configure(text='''RACE ENDED: Lane 2 finished before lane 1 started\nPress the button to start a new race...''')

        # Reset all variables ready for the next race
        reset()
        
    # If finish race has not been triggered after 20 seconds, reset the game
    if (COUNT1 >= 20 or COUNT2 >= 20):

        # Print message telling the user the race has stopped
        print "\n"*100
        print "RACE ENDED: \n   No cars have finished the race"
        print "\nPress the button to start a new race"
        if LANE1 == False or LANE2 == False:
            lblMain.configure(text='''RACE ENDED: A car didn't finish the race\nPress the button to start a new race...''')
        else:
            lblMain.configure(text='''RACE ENDED: You took way too long to finish!\nPress the button to start a new race...''')
        # Reset all variables ready for the next race
        reset()

    try:
        window.update()
    except:
        print "window closed"
        import sys
        sys.exit()
    
window.mainloop()


